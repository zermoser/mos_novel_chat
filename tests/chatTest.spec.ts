import { test, expect } from '@playwright/test';

// await page.waitForTimeout(8000); // ‡∏£‡∏≠ 8‡∏ß‡∏¥ ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏¥‡∏•‡∏•‡∏¥‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ

test.describe('NovelChatAppModule', () => {
  test.beforeEach(async ({ page }) => {
    await page.goto('/');
  });

  test('should display initial UI elements', async ({ page }) => {
    // Header verification
    await expect(page.getByTestId('app-title')).toHaveText('Novel Chat');
    await expect(page.getByTestId('app-subtitle')).toHaveText('‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏•‡∏≠‡∏ô ‡πÜ ‡∏Ç‡∏≠‡∏á Dev ‡∏ô‡∏≠‡∏ô‡∏ô‡πâ‡∏≠‡∏¢');

    // Initial messages
    await expect(page.getByTestId('system-message')).toContainText('‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô...');

    // Input area
    await expect(page.getByTestId('message-input')).toBeVisible();
    await expect(page.getByTestId('send-button')).toBeVisible();
  });

  test('should send and display user messages', async ({ page }) => {
    // Send message as first character
    await page.getByTestId('message-input').fill('‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö');
    await page.getByTestId('send-button').click();

    // Verify message appears
    await expect(page.locator('text=‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö').last()).toBeVisible();

    // Verify sender name in message header
    const lastMessageHeader = page.locator('[data-testid="message-header"]').last();
    await expect(lastMessageHeader).toContainText('‡∏°‡∏≠‡∏™');

    // ‡∏£‡∏≠‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤ message bubble ‡∏à‡∏∞‡∏õ‡∏£‡∏≤‡∏Å‡∏è
    const messageBubble = page.locator('.rounded-2xl:has-text("‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö")');
    await messageBubble.waitFor({ state: 'visible' });

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö class ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    const classes = await messageBubble.getAttribute('class');
    expect(classes).toContain('from-blue-400');
    expect(classes).toContain('to-indigo-500');
  });

  test('should switch between characters', async ({ page }) => {
    // Verify initial character
    await expect(page.getByTestId('current-character-name')).toHaveText('‡∏°‡∏≠‡∏™');

    // Switch to second character
    await page.getByTestId('next-character-button').click();
    await expect(page.getByTestId('current-character-name')).toHaveText('‡∏°‡∏≤‡∏¢‡∏≤');

    // Send message as second character
    await page.getByTestId('message-input').fill('‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞');
    await page.getByTestId('send-button').click();

    // Verify message appears
    await expect(page.locator('text=‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞').last()).toBeVisible();
    await expect(page.getByTestId('current-character-name')).toHaveText('‡∏°‡∏≤‡∏¢‡∏≤');
  });

  test('should add new character', async ({ page }) => {
    // Open settings
    await page.getByTestId('settings-button').click();
    await expect(page.getByTestId('settings-modal')).toBeVisible();

    // Open add character modal
    await page.getByTestId('add-character-button').click();
    await expect(page.getByTestId('character-modal')).toBeVisible();

    // Fill character details
    await page.getByTestId('character-id-input').fill('new-char');
    await page.getByTestId('character-name-input').fill('‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö');
    await page.getByTestId('character-avatar-input').fill('ü§ñ');
    await page.getByTestId('color-option-‡∏°‡πà‡∏ß‡∏á').click();
    await page.getByTestId('character-personality-input').fill('‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö');

    // Submit
    await page.getByTestId('save-character-button').click();

    // Verify new character appears
    await expect(page.getByTestId('character-card-new-char')).toBeVisible();

    // Close settings
    await page.getByTestId('close-settings-button').click();

    // Switch to new character (skip system character)
    await page.getByTestId('next-character-button').click(); // Move to Maya
    await page.getByTestId('next-character-button').click(); // Move to System
    await page.getByTestId('next-character-button').click(); // Move to New Character
    await expect(page.getByTestId('current-character-name')).toHaveText('‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö');

    // Send message as new character
    await page.getByTestId('message-input').fill('‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö');
    await page.getByTestId('send-button').click();

    // Verify message styling - use more specific selector
    const newMessageBubble = page.locator('.rounded-2xl:has-text("‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö")');
    await expect(newMessageBubble).toHaveClass(/from-purple-400/);
  });

  test('should edit character', async ({ page }) => {
    // Open settings
    await page.getByTestId('settings-button').click();

    // Open edit modal for Maya
    await page.getByTestId('character-card-2').hover();
    await page.getByTestId('edit-character-2').click();

    // Edit details
    await page.getByTestId('character-name-input').fill('‡∏°‡∏≤‡∏¢‡∏≤ (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß)');
    await page.getByTestId('color-option-‡∏™‡πâ‡∏°').click();
    await page.getByTestId('character-personality-input').fill('‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç');

    // Save changes
    await page.getByTestId('save-character-button').click();

    // Verify changes
    await expect(page.getByTestId('character-name-2')).toHaveText('‡∏°‡∏≤‡∏¢‡∏≤ (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß)');

    // Close settings
    await page.getByTestId('close-settings-button').click();

    // Switch to Maya (skip system character)
    await page.getByTestId('next-character-button').click(); // Move to Maya
    await expect(page.getByTestId('current-character-name')).toHaveText('‡∏°‡∏≤‡∏¢‡∏≤ (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß)');

    // Send message as Maya
    await page.getByTestId('message-input').fill('‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç');
    await page.getByTestId('send-button').click();

    // Verify styling changed - use more specific selector
    const editedMessageBubble = page.locator('.rounded-2xl:has-text("‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç")');
    await expect(editedMessageBubble).toHaveClass(/from-orange-400/);
  });

  test('should delete character', async ({ page }) => {
    // Add a character to delete (since initial characters are fixed)
    await page.getByTestId('settings-button').click();
    await page.getByTestId('add-character-button').click();
    await page.getByTestId('character-id-input').fill('temp-char');
    await page.getByTestId('character-name-input').fill('‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß');
    await page.getByTestId('character-avatar-input').fill('üëª');
    await page.getByTestId('color-option-‡πÄ‡∏ó‡∏≤').click();
    await page.getByTestId('character-personality-input').fill('‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡∏ö');
    await page.getByTestId('save-character-button').click();

    // Wait for character to be added before closing settings
    await expect(page.getByTestId('character-card-temp-char')).toBeVisible();
    await page.getByTestId('close-settings-button').click();

    // Switch to the temporary character
    await page.getByTestId('next-character-button').click(); // Maya
    await page.getByTestId('next-character-button').click(); // System
    await page.getByTestId('next-character-button').click(); // Temp character
    await expect(page.getByTestId('current-character-name')).toHaveText('‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß');

    // Open settings again
    await page.getByTestId('settings-button').click();

    // Set up dialog handler
    page.once('dialog', dialog => dialog.accept());

    // Delete the temporary character
    await page.getByTestId('delete-character-temp-char').click();

    // Wait for character card to be removed
    await expect(page.getByTestId('character-card-temp-char')).not.toBeAttached();
  });

  test('should update app settings', async ({ page }) => {
    // Open settings
    await page.getByTestId('settings-button').click();

    // Update app config
    await page.getByTestId('app-title-input').fill('‡πÅ‡∏≠‡∏õ‡πÉ‡∏´‡∏°‡πà');
    await page.getByTestId('app-subtitle-input').fill('‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà');

    // Toggle sound
    await page.getByTestId('toggle-sound-button').click();

    // Close settings
    await page.getByTestId('close-settings-button').click();

    // Verify changes
    await expect(page.getByTestId('app-title')).toHaveText('‡πÅ‡∏≠‡∏õ‡πÉ‡∏´‡∏°‡πà');
    await expect(page.getByTestId('app-subtitle')).toHaveText('‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà');
  });

  test('should prevent deleting system character', async ({ page }) => {
    // Open settings
    await page.getByTestId('settings-button').click();

    // Try to delete system character
    const systemCard = page.getByTestId('character-card-system');
    await systemCard.hover();
    await expect(page.getByTestId('delete-character-system')).not.toBeVisible();
  });
  test('should handle long group conversation with dynamic time/location changes', async ({ page }) => {
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° 3 ‡∏ï‡∏±‡∏ß (‡∏£‡∏ß‡∏°‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô 2 ‡∏ï‡∏±‡∏ß ‡∏à‡∏∞‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î 5 ‡∏ï‡∏±‡∏ß)
    await page.getByTestId('settings-button').click();

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏µ‡πà 3
    await page.getByTestId('add-character-button').click();
    await page.getByTestId('character-id-input').fill('char3');
    await page.getByTestId('character-name-input').fill('‡∏ô‡∏±‡∏ó');
    await page.getByTestId('character-avatar-input').fill('üë®‚Äçüé§');
    await page.getByTestId('color-option-‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß').click();
    await page.getByTestId('character-personality-input').fill('‡∏®‡∏¥‡∏•‡∏õ‡∏¥‡∏ô‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡∏î‡∏µ');
    await page.getByTestId('save-character-button').click();

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏µ‡πà 4
    await page.getByTestId('add-character-button').click();
    await page.getByTestId('character-id-input').fill('char4');
    await page.getByTestId('character-name-input').fill('‡∏û‡∏•‡∏≠‡∏¢');
    await page.getByTestId('character-avatar-input').fill('üë©‚Äçüéì');
    await page.getByTestId('color-option-‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á').click();
    await page.getByTestId('character-personality-input').fill('‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏à‡∏≠‡∏°‡∏Ç‡∏¢‡∏±‡∏ô');
    await page.getByTestId('save-character-button').click();

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏µ‡πà 5
    await page.getByTestId('add-character-button').click();
    await page.getByTestId('character-id-input').fill('char5');
    await page.getByTestId('character-name-input').fill('‡πÄ‡∏õ‡∏≤');
    await page.getByTestId('character-avatar-input').fill('üë®‚Äçüîß');
    await page.getByTestId('color-option-‡πÄ‡∏ó‡∏≤').click();
    await page.getByTestId('character-personality-input').fill('‡∏ä‡πà‡∏≤‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÉ‡∏à‡∏î‡∏µ');
    await page.getByTestId('save-character-button').click();

    await page.getByTestId('close-settings-button').click();

    // ‡πÄ‡∏Å‡πá‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô system messages ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (‡∏°‡∏µ 1 ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°)
    const initialSystemMessages = await page.locator('[data-testid="system-message"]').count();

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤
    const getRandomLocation = () => {
      const locations = [
        '‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏°‡∏∏‡∏î‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢', '‡∏Ñ‡∏≤‡πÄ‡∏ü‡πà‡∏¢‡πà‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤', '‡∏™‡∏ß‡∏ô‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞‡∏Å‡∏•‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡∏≠‡∏á',
        '‡∏´‡∏≠‡∏û‡∏±‡∏Å‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤', '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏Å‡πà‡∏≤', '‡πÇ‡∏£‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Å‡∏•‡∏≤‡∏á', '‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå',
        '‡∏´‡∏≠‡∏®‡∏¥‡∏•‡∏õ‡πå', '‡∏™‡∏ô‡∏≤‡∏°‡∏Å‡∏µ‡∏¨‡∏≤', '‡∏•‡∏≤‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤'
      ];
      return locations[Math.floor(Math.random() * locations.length)];
    };

    const getRandomTime = () => {
      const times = [
        'üåû ‡πÄ‡∏ä‡πâ‡∏≤‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡∏ó‡∏µ‡πà‡∏™‡∏î‡πÉ‡∏™', 'üåÜ ‡∏¢‡∏≤‡∏°‡πÄ‡∏¢‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏®‡∏∏‡∏Å‡∏£‡πå', 'üåô ‡∏Ñ‡∏∑‡∏ô‡∏ß‡∏±‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå‡∏≠‡∏±‡∏ô‡πÄ‡∏á‡∏µ‡∏¢‡∏ö‡∏™‡∏á‡∏ö',
        '‚òÄÔ∏è ‡∏ï‡∏≠‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå', 'üåßÔ∏è ‡πÄ‡∏ä‡πâ‡∏≤‡∏ù‡∏ô‡∏û‡∏£‡∏≥‡∏ß‡∏±‡∏ô‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£', 'üå´Ô∏è ‡∏Ñ‡∏∑‡∏ô‡∏´‡∏°‡∏≠‡∏Å‡∏´‡∏ô‡∏≤‡∏ß‡∏ß‡∏±‡∏ô‡∏û‡∏∏‡∏ò',
        '‚õÖ ‡∏ö‡πà‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ó‡∏µ‡πà‡πÅ‡∏à‡πà‡∏°‡πÉ‡∏™', 'üåÉ ‡∏î‡∏∂‡∏Å‡∏™‡∏á‡∏±‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∑‡∏ô‡∏ß‡∏±‡∏ô‡∏®‡∏∏‡∏Å‡∏£‡πå', 'üåá ‡πÄ‡∏ß‡∏•‡∏≤‡∏û‡∏•‡∏ö‡∏Ñ‡πà‡∏≥‡∏ß‡∏±‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå',
        'üåå ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏∑‡∏ô‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå'
      ];
      return times[Math.floor(Math.random() * times.length)];
    };

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∞‡∏ö‡∏ö
    const addSystemMessage = async (message: string) => {
      await page.evaluate((msg) => {
        const messagesContainer = document.querySelector('[data-testid="messages-container"]');
        if (messagesContainer) {
          const systemMessage = document.createElement('div');
          systemMessage.innerHTML = `
                <div data-testid="system-message" class="flex justify-center my-2">
                    <div class="bg-amber-50 border border-amber-200 text-amber-800 rounded-lg px-4 py-2 text-sm max-w-[90%] text-center">
                        <p class="whitespace-pre-wrap">${msg}</p>
                    </div>
                </div>
            `;
          messagesContainer.appendChild(systemMessage);
        }
      }, message);
    };

    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á
    const startLocation = getRandomLocation();
    const startTime = getRandomTime();
    await addSystemMessage(`${startTime} ‡πÉ‡∏ô${startLocation}`);

    // ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°‡∏£‡∏∞‡∏ö‡∏ö)
    const characters = ['‡∏°‡∏≠‡∏™', '‡∏°‡∏≤‡∏¢‡∏≤', '‡∏ô‡∏±‡∏ó', '‡∏û‡∏•‡∏≠‡∏¢', '‡πÄ‡∏õ‡∏≤'];

    // ‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    let currentCharacterIndex = 0;

    // ‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏° - 30 ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    for (let i = 0; i < 30; i++) {
      // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏∏‡∏Å 3 ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà 0, 3, 6, ...)
      if (i % 3 === 0) {
        // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏ô‡∏£‡∏≠‡∏ö
        currentCharacterIndex = (currentCharacterIndex + 1) % characters.length;

        // ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏ñ‡∏∂‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
        let currentCharacterName = await page.getByTestId('current-character-name').innerText();
        while (currentCharacterName !== characters[currentCharacterIndex]) {
          await page.getByTestId('next-character-button').click();
          currentCharacterName = await page.getByTestId('current-character-name').innerText();
          await page.waitForTimeout(100); // ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡πÉ‡∏´‡πâ UI ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
        }
      }

      // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ß‡∏•‡∏≤/‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏∏‡∏Å 5 ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
      if (i % 5 === 0 && i > 0) {
        const newLocation = getRandomLocation();
        const newTime = getRandomTime();
        await addSystemMessage(`${newTime} ‡πÉ‡∏ô${newLocation}`);
      }

      // ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á
      let message = '';
      const currentCharacterName = characters[currentCharacterIndex];

      switch (i) {
        case 0:
          message = '‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏ô‡∏Ç‡πà‡∏≤‡∏ß‡∏•‡∏∑‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏°‡∏∏‡∏î‡∏ï‡∏≠‡∏ô‡∏î‡∏∂‡∏Å‡∏°‡∏±‡πâ‡∏¢?';
          break;
        case 1:
          message = '‡∏â‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏ô‡∏°‡∏≤‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ö‡∏≤‡∏á‡∏Ñ‡∏ô‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏á‡∏≤‡∏£‡∏π‡∏õ‡πÅ‡∏õ‡∏•‡∏Å‡πÜ ‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏°‡∏∏‡∏î‡∏ï‡∏≠‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏∑‡∏ô!';
          break;
        case 2:
          message = '‡πÑ‡∏°‡πà‡∏ô‡∏∞! ‡∏ú‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡∏≠‡∏ô‡∏î‡∏∂‡∏Å‡∏ö‡πà‡∏≠‡∏¢‡πÜ ‡∏ô‡∏∞‡πÄ‡∏ô‡∏µ‡πà‡∏¢ üò±';
          break;
        case 3:
          message = '‡∏â‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏ö‡∏ö‡∏ô‡∏±‡πâ‡∏ô‡∏´‡∏£‡∏≠‡∏Å ‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏Ñ‡πà‡πÅ‡∏™‡∏á‡πÄ‡∏á‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥';
          break;
        case 4:
          message = '‡∏ú‡∏°‡πÄ‡∏´‡πá‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ö‡∏û‡∏•‡∏≠‡∏¢ ‡∏°‡∏±‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå';
          break;
        case 5:
          message = '‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡∏°‡∏±‡∏ô‡∏ô‡πà‡∏≤‡∏Å‡∏•‡∏±‡∏ß‡∏°‡∏≤‡∏Å‡∏ô‡∏∞! ‡∏°‡∏µ‡∏Ñ‡∏ô‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏ï‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á...';
          break;
        case 6:
          message = '‡∏ö‡∏≤‡∏á‡∏ó‡∏µ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏°‡∏û‡∏±‡∏î‡∏ú‡πà‡∏≤‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ß‡πâ';
          break;
        case 7:
          message = '‡∏ú‡∏°‡∏ß‡πà‡∏≤‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡πÄ‡∏£‡∏≤‡∏Ñ‡∏ß‡∏£‡πÑ‡∏õ‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏Å‡∏±‡∏ô‡∏î‡∏π‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á';
          break;
        case 8:
          message = '‡∏â‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ô‡∏∞ ‡∏°‡∏±‡∏ô‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ';
          break;
        case 9:
          message = '‡∏ô‡∏±‡πà‡∏ô‡∏™‡∏¥! ‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏•‡∏¢';
          break;
        case 10:
          message = '‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÑ‡∏õ‡∏Å‡∏±‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏ô‡∏Å‡πá‡πÑ‡∏°‡πà‡∏ô‡πà‡∏≤‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤';
          break;
        case 11:
          message = '‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏ú‡∏°‡∏Ç‡∏≠‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ô';
          break;
        case 12:
          message = '‡∏â‡∏±‡∏ô‡∏Å‡πá‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢ ‡πÅ‡∏ï‡πà‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏ô‡∏≥‡πÑ‡∏ü‡∏â‡∏≤‡∏¢‡∏°‡∏≤‡∏ô‡∏∞';
          break;
        case 13:
          message = '‡πÄ‡∏≠‡∏≤‡∏•‡πà‡∏∞ ‡∏ï‡∏Å‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏ï‡∏≠‡∏ô‡∏™‡∏≤‡∏°‡∏ó‡∏∏‡πà‡∏°‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ';
          break;
        case 14:
          message = '‡∏£‡∏≠‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏ô‡∏∞ ‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏´‡∏£‡∏≠?';
          break;
        case 15:
          message = '‡∏ú‡∏°‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏≠‡∏≤‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡∏≠‡∏¥‡∏ô‡∏ü‡∏£‡∏≤‡πÄ‡∏£‡∏î‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢';
          break;
        case 16:
          message = '‡∏î‡∏µ‡πÄ‡∏•‡∏¢! ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏ä‡∏±‡∏î‡πÜ';
          break;
        case 17:
          message = '‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏ô‡∏≥‡πÄ‡∏™‡∏ö‡∏µ‡∏¢‡∏á‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞ ‡∏â‡∏±‡∏ô‡∏à‡∏∞‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡∏ô‡∏°';
          break;
        case 18:
          message = '‡∏ú‡∏°‡∏à‡∏∞‡πÄ‡∏≠‡∏≤‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏°‡∏≤ ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏°‡∏µ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏õ‡∏•‡∏Å‡πÜ';
          break;
        case 19:
          message = '‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏â‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏∑‡πà‡∏ô‡πÄ‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏•‡πà‡∏∞!';
          break;
        case 20:
          message = '‡∏ú‡∏°‡∏Å‡πá‡∏î‡πâ‡∏ß‡∏¢ ‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡∏Å‡∏•‡∏±‡∏ß‡∏ô‡∏¥‡∏î‡∏´‡∏ô‡πà‡∏≠‡∏¢‡πÅ‡∏ï‡πà‡∏Å‡πá‡∏ï‡∏∑‡πà‡∏ô‡πÄ‡∏ï‡πâ‡∏ô';
          break;
        case 21:
          message = '‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô‡∏¢‡∏±‡∏á? ‡πÉ‡∏Å‡∏•‡πâ‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏≤‡∏°‡∏ó‡∏∏‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞';
          break;
        case 22:
          message = '‡∏ú‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏°‡∏∏‡∏î';
          break;
        case 23:
          message = '‡∏â‡∏±‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÑ‡∏õ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏ñ‡∏∂‡∏á‡πÉ‡∏ô‡∏´‡πâ‡∏≤‡∏ô‡∏≤‡∏ó‡∏µ';
          break;
        case 24:
          message = '‡∏ú‡∏°‡∏Å‡πá‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏≤ ‡∏ù‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏±‡∏ö‡∏£‡∏ñ‡∏•‡∏≥‡∏ö‡∏≤‡∏Å‡∏´‡∏ô‡πà‡∏≠‡∏¢';
          break;
        case 25:
          message = '‡∏ù‡∏ô‡∏ï‡∏Å‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏¢‡∏¥‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡∏ô‡πà‡∏≤‡∏Å‡∏•‡∏±‡∏ß‡πÄ‡∏•‡∏¢‡∏ô‡∏∞';
          break;
        case 26:
          message = '‡∏≠‡∏¢‡πà‡∏≤‡∏û‡∏π‡∏î‡πÅ‡∏ö‡∏ö‡∏ô‡∏±‡πâ‡∏ô‡∏™‡∏¥ ‡∏â‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏•‡∏∏‡∏Å‡πÅ‡∏•‡πâ‡∏ß!';
          break;
        case 27:
          message = '‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏ñ‡∏∂‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏£‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏Å‡∏±‡∏ô‡πÄ‡∏•‡∏¢‡∏°‡∏±‡πâ‡∏¢?';
          break;
        case 28:
          message = '‡∏£‡∏≠‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß ‡∏ú‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô';
          break;
        case 29:
          message = '‡πÇ‡∏≠‡πÄ‡∏Ñ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏õ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô‡∏ô‡∏∞!';
          break;
        default:
          message = `‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà ${i + 1} ‡∏à‡∏≤‡∏Å ${currentCharacterName}`;
      }

      await page.getByTestId('message-input').fill(message);
      await page.getByTestId('send-button').click();

      // ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
      await page.waitForTimeout(300);
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏¥‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á
    await addSystemMessage('üåå ‡πÄ‡∏ß‡∏•‡∏≤‡∏•‡πà‡∏ß‡∏á‡πÄ‡∏•‡∏¢‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏∑‡∏ô... ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∂‡∏Å‡∏•‡∏±‡∏ö‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏û‡∏ö');

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
    await expect(page.locator('text=‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∂‡∏Å‡∏•‡∏±‡∏ö‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏û‡∏ö').last()).toBeVisible();
  });
});